//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "FMAPSDelegate-Protocol.h"
#import "FMDAccessoryRegistryDelegate-Protocol.h"
#import "FMDAccessoryRegistrySupportDelegate-Protocol.h"
#import "FMDServerInteractionControllerDelegate-Protocol.h"
#import "FMDSupportedAccessoryRegistryDelegate-Protocol.h"

@class FMDAccessoryLocationStore, FMDAccessoryRegistry, FMDAccessoryRegistryDelegateAdaptor, FMDAccount, FMDBluetoothManager, FMDLocator, FMDServerInteractionController, FMDSupportedAccessoryRegistry, FMReadWriteLock, NSMutableDictionary, NSString;
@protocol FMDAccountStore;

@interface FMDServiceProvider : NSObject <FMAPSDelegate, FMDAccessoryRegistryDelegate, FMDAccessoryRegistrySupportDelegate, FMDSupportedAccessoryRegistryDelegate, FMDServerInteractionControllerDelegate>
{
    _Bool _waitingToMakeProviderActive;
    _Bool _completedStartupRegister;
    FMDAccount *_account;
    id <FMDAccountStore> _accountStore;
    FMDLocator *_standardLocator;
    NSString *_serviceIdentifierInURL;
    FMDAccessoryRegistry *_accessoryRegistry;
    FMDSupportedAccessoryRegistry *_supportedAccessoryRegistry;
    FMDAccessoryLocationStore *_accessoryLocationStore;
    FMDBluetoothManager *_bluetoothManager;
    FMDServerInteractionController *_serverInteractionController;
    FMReadWriteLock *_accountReadWriteLock;
    NSMutableDictionary *_serverInteractionControllerByAccessory;
    NSMutableDictionary *_futuresByCommandId;
    FMDAccessoryRegistryDelegateAdaptor *_accessoryRegistryDelegateAdaptor;
}

+ (void)setActiveServiceProvider:(id)arg1;
+ (id)activeServiceProvider;
@property(retain, nonatomic) FMDAccessoryRegistryDelegateAdaptor *accessoryRegistryDelegateAdaptor; // @synthesize accessoryRegistryDelegateAdaptor=_accessoryRegistryDelegateAdaptor;
@property(retain, nonatomic) NSMutableDictionary *futuresByCommandId; // @synthesize futuresByCommandId=_futuresByCommandId;
@property(retain, nonatomic) NSMutableDictionary *serverInteractionControllerByAccessory; // @synthesize serverInteractionControllerByAccessory=_serverInteractionControllerByAccessory;
@property(retain, nonatomic) FMReadWriteLock *accountReadWriteLock; // @synthesize accountReadWriteLock=_accountReadWriteLock;
@property(nonatomic) _Bool completedStartupRegister; // @synthesize completedStartupRegister=_completedStartupRegister;
@property(retain, nonatomic) FMDServerInteractionController *serverInteractionController; // @synthesize serverInteractionController=_serverInteractionController;
@property(retain, nonatomic) FMDBluetoothManager *bluetoothManager; // @synthesize bluetoothManager=_bluetoothManager;
@property(retain, nonatomic) FMDAccessoryLocationStore *accessoryLocationStore; // @synthesize accessoryLocationStore=_accessoryLocationStore;
@property(retain, nonatomic) FMDSupportedAccessoryRegistry *supportedAccessoryRegistry; // @synthesize supportedAccessoryRegistry=_supportedAccessoryRegistry;
@property(retain, nonatomic) FMDAccessoryRegistry *accessoryRegistry; // @synthesize accessoryRegistry=_accessoryRegistry;
@property(readonly, nonatomic) NSString *serviceIdentifierInURL; // @synthesize serviceIdentifierInURL=_serviceIdentifierInURL;
@property(nonatomic) _Bool waitingToMakeProviderActive; // @synthesize waitingToMakeProviderActive=_waitingToMakeProviderActive;
@property(retain, nonatomic) FMDLocator *standardLocator; // @synthesize standardLocator=_standardLocator;
@property(readonly, nonatomic) id <FMDAccountStore> accountStore; // @synthesize accountStore=_accountStore;
- (void).cxx_destruct;
- (void)_accountDidChangeFrom:(id)arg1 to:(id)arg2;
- (_Bool)_isValidIntentAccountId:(id)arg1;
- (void)_handleSoundIntent:(id)arg1 serverContext:(id)arg2;
- (void)clearFutures;
- (void)removeFutureForCommandId:(id)arg1;
- (void)setFuture:(id)arg1 commandId:(id)arg2;
- (id)futureForCommandId:(id)arg1;
- (void)_handleQCIntent:(id)arg1 serverContext:(id)arg2;
- (void)_handleLocateIntent:(id)arg1 serverContext:(id)arg2;
- (void)_handlePushWithoutIntents:(id)arg1;
- (void)didReceiveAPSToken:(id)arg1;
- (void)didReceiveAPSMessage:(id)arg1;
- (_Bool)enqueueRequest:(id)arg1 forAccessory:(id)arg2;
- (_Bool)enqueueRequest:(id)arg1;
- (void)supportedAccessoryRegistryDidUpdateSupportedAccessories:(id)arg1;
- (_Bool)supportsAccessory:(id)arg1;
- (void)accessoryDidUnpair:(id)arg1;
- (void)accessoryDidPair:(id)arg1;
- (void)accessoryDidConnect:(id)arg1;
- (void)accessoryDidUpdate:(id)arg1;
- (void)localeChanged:(id)arg1;
- (void)locationServicesStateChanged:(id)arg1;
- (void)allowPasscodeModificationChanged:(id)arg1;
- (void)passcodeStateChanged:(id)arg1;
- (void)deviceNameChanged:(id)arg1;
- (id)accountForServerInteractionController:(id)arg1;
- (void)didReceiveServerAlertForRequest:(id)arg1;
- (void)didReceiveAuthFailureForRequest:(id)arg1;
- (id)alertActionInfoForAction:(id)arg1 andURL:(id)arg2;
- (void)showAlertFromServerResponse:(id)arg1;
- (id)newLocationManager;
- (void)tryToFetchAuthToken;
- (unsigned int)authInvalidError;
- (unsigned int)essentialServerInfoMissingError;
- (void)registerDidFail;
- (void)registerDidSucceed;
- (void)registerDeviceWithCause:(id)arg1 force:(_Bool)arg2;
- (id)serverInteractionControllerForAccessory:(id)arg1;
- (id)urlForRequestType:(id)arg1;
- (id)_lastForcedRegisterTimePrefKey;
- (id)_registerDigestPrefKey;
- (void)deleteRegisterDigest;
- (void)deregisterCommonNotifications;
- (void)registerCommonNotifications;
- (void)queueAccessoryActionsIfNeeded:(id)arg1;
- (void)_sendStartupRegister;
- (void)didMakeProviderInactive;
- (void)willMakeProviderInactive;
- (void)makeProviderInactive;
- (void)didMakeProviderActive;
- (_Bool)willMakeProviderActive;
- (void)makeProviderActive;
- (void)removeAccount;
- (void)accountRemoveRequestedWithCompletion:(CDUnknownBlockType)arg1;
- (void)accountAdded;
- (void)accountInfoDidChange;
- (void)reinitializeProviderWithAccount:(id)arg1;
- (void)removeAccount:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateAccount:(id)arg1;
@property(retain, nonatomic) FMDAccount *account; // @synthesize account=_account;
- (void)addAccount:(id)arg1;
- (void)start;
@property(readonly, nonatomic) NSString *serviceName;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

