//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "FMDDeviceActionsServiceProvider.h"

@class BKSApplicationStateMonitor, FMAlert, FMDFMIPNanoIDSListener, FMDNanoMigrator, FMDUnregisterTokenStore, NSObject, NSString, NSTimer;
@protocol OS_dispatch_queue;

@interface FMDFMIPServiceProvider : FMDDeviceActionsServiceProvider
{
    _Bool _isMonitoringPendingDeviceIdentity;
    _Bool _waitingForBuddy;
    int _lockStateNotifyToken;
    FMAlert *_pendingSecureMessage;
    FMAlert *_pendingLocateAlert;
    BKSApplicationStateMonitor *_pendingDeviceIdentityMonitor;
    NSString *_deviceIdentityPendingXpcTransactionName;
    NSObject<OS_dispatch_queue> *_identity_wait_queue;
    NSObject<OS_dispatch_queue> *_device_unlock_actions_queue;
    NSTimer *_buddyWaitTimer;
    long long _identityVersion;
    FMDFMIPNanoIDSListener *_idsListener;
    NSObject<OS_dispatch_queue> *_authTokenHealingQueue;
    FMDNanoMigrator *_nanoMigrator;
    FMDUnregisterTokenStore *_unregisterTokenStore;
}

@property(retain, nonatomic) FMDUnregisterTokenStore *unregisterTokenStore; // @synthesize unregisterTokenStore=_unregisterTokenStore;
@property(retain, nonatomic) FMDNanoMigrator *nanoMigrator; // @synthesize nanoMigrator=_nanoMigrator;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *authTokenHealingQueue; // @synthesize authTokenHealingQueue=_authTokenHealingQueue;
@property(retain, nonatomic) FMDFMIPNanoIDSListener *idsListener; // @synthesize idsListener=_idsListener;
@property(nonatomic) long long identityVersion; // @synthesize identityVersion=_identityVersion;
@property(nonatomic) _Bool waitingForBuddy; // @synthesize waitingForBuddy=_waitingForBuddy;
@property(retain, nonatomic) NSTimer *buddyWaitTimer; // @synthesize buddyWaitTimer=_buddyWaitTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *device_unlock_actions_queue; // @synthesize device_unlock_actions_queue=_device_unlock_actions_queue;
@property(nonatomic) int lockStateNotifyToken; // @synthesize lockStateNotifyToken=_lockStateNotifyToken;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *identity_wait_queue; // @synthesize identity_wait_queue=_identity_wait_queue;
@property(retain, nonatomic) NSString *deviceIdentityPendingXpcTransactionName; // @synthesize deviceIdentityPendingXpcTransactionName=_deviceIdentityPendingXpcTransactionName;
@property(retain, nonatomic) BKSApplicationStateMonitor *pendingDeviceIdentityMonitor; // @synthesize pendingDeviceIdentityMonitor=_pendingDeviceIdentityMonitor;
@property(nonatomic) _Bool isMonitoringPendingDeviceIdentity; // @synthesize isMonitoringPendingDeviceIdentity=_isMonitoringPendingDeviceIdentity;
@property(retain, nonatomic) FMAlert *pendingLocateAlert; // @synthesize pendingLocateAlert=_pendingLocateAlert;
@property(retain, nonatomic) FMAlert *pendingSecureMessage; // @synthesize pendingSecureMessage=_pendingSecureMessage;
- (void).cxx_destruct;
- (id)_unregisterDeviceErrorForResponseError:(long long)arg1 inContext:(unsigned long long)arg2;
- (void)_activeWatchDidChange;
- (void)_deviceDidUnpair:(id)arg1;
- (void)_deviceDidPair:(id)arg1;
- (void)locationServiceAuthorizationChanged:(id)arg1;
- (void)systemShutdownSoon:(id)arg1;
- (void)_fmipStateChangeLocalNotification:(id)arg1;
- (void)buddyDidComplete:(id)arg1;
- (void)_buddyCompletionCheckTimerFired:(id)arg1;
- (void)_serialQueue_checkAndSendPendingDeviceIdentity;
- (void)checkAndSendPendingDeviceIdentity;
- (void)stopMonitoringPendingDeviceIdentity;
- (void)monitorAndSendDeviceIdentityLater;
- (void)_serialQueue_sendDeviceIdentityIfEligible;
- (void)sendDeviceIdentityIfEligible;
- (_Bool)_canSendDeviceIdentityNow;
- (void)_enqueueIdentityOperation:(CDUnknownBlockType)arg1;
- (void)syncFMIPStateToWatch;
- (void)_checkForBuddyCompletionAndReinitialize:(_Bool)arg1 withBuddyStatus:(_Bool)arg2;
- (void)_showPendingHomescreenAlertNow;
- (void)_updateToHomescreenAlerts;
- (unsigned long long)fmipState;
- (void)didReceiveAuthFailureForRequest:(id)arg1;
- (void)_showPairedDeviceDisableFMIPErrorForResponseError:(long long)arg1;
- (void)_showMarkAsMissingErrorForResponseError:(long long)arg1;
- (void)_showUnregisterDeviceErrorForResponseError:(long long)arg1 inContext:(unsigned long long)arg2;
- (void)markPairedDeviceWithUdid:(id)arg1 asMissingUsingToken:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)unregisterDeviceWithCompletion:(CDUnknownBlockType)arg1;
- (void)disableFMIPForPairedDeviceWithUDID:(id)arg1 andCompletion:(CDUnknownBlockType)arg2;
- (void)registerDidSucceed;
- (void)registerDeviceWithCause:(id)arg1 force:(_Bool)arg2;
- (void)_sendDeviceIdentityNow;
- (void)sendDeviceIdentity:(long long)arg1;
- (unsigned int)essentialServerInfoMissingError;
- (void)tryToFetchAuthToken;
- (void)checkShutdownSoonRegistration;
- (void)accountRemoveRequestedWithCompletion:(CDUnknownBlockType)arg1;
- (id)alertActionInfoForAction:(id)arg1 andURL:(id)arg2;
- (void)deregisterCommonNotifications;
- (void)registerCommonNotifications;
- (void)willMakeProviderInactive;
- (void)didMakeProviderActive;
- (_Bool)willMakeProviderActive;
- (void)start;
- (id)serviceName;
- (id)accountStore;
- (id)init;

@end

